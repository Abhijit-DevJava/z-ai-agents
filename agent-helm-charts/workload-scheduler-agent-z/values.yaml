replicaCount: 1

image:
  repository: na.artifactory.swg-devops.com/sys-nazare-cicd-team-wxo4z-docker-local/wxa4z-workload-scheduler-agent
  tag: 20250916064413-dev-110f3daad34984d23d9898337c2302bfac4bd49d-multiarch@sha256:e45d18d08cc17377b7d836e8f713c30c4e8511b56028c2141b60cb832a9a19b7
  pullPolicy: Always

service:
  name: wxa4z-workload-scheduler-agent-service
  ports:
    name: http
    protocol: TCP
    port: 8080
    targetPort: 8050

route:
  name: wxa4z-workload-scheduler-agent-route
  annotations:
    hostGenerated: "true"
  serviceName: wxa4z-workload-scheduler-agent-service
  weight: 100
  targetPort: http
  tls:
    termination: edge
    secretName: wxa4z-agents-tls-secret
env:
  WATSONX_DEPLOYMENT_SPACE_ID: DEPLOYMENT_SPACE_ID
  WATSONX_ML_URL: WML_URL
  ONPREM_WML_INSTANCE_ID: openshift
  WATSONX_MODEL_ID: meta-llama/llama-3-3-70b-instruct
  DEPLOYMENT_TYPE: on-prem
  # CPD_VERSION, needed for on-prem deployments.Example(5.1)
  CPD_VERSION: "5.2"
  LANGFUSE_HOST: ""
  LANGFUSE_TRACING_ENABLED: false
  LANGFUSE_ENABLED: LANGFUSE_ENABLED
  MAX_LLM_CONTEXT_MESSAGES_COUNT: 50
  MODEL_CATALOG_PATH: /opt/app-root/src/model_catalog.yaml
secrets:
  name: wxa4z-workload-scheduler-agent-secrets
  createSecret: true
  data:
    # CPD USERNAME,  Needed for on-prem only.(set it to empty for cloud) 
    CPD_USERNAME: CPD_USERNAME
    # Set this to CPD API Key for on-prem Install, For IBM Cloud, use IBM Cloud IAM API KEY
    WATSONX_API_KEY: WATSONX_API_KEY
    # External App Credential specific to aiops-agent
    AIOPS_BASE_URL: AIOPS_BASE_URL
    AIOPS_TOKEN: AIOPS_TOKEN
    # This is the auth token for communication with agent. This Key field(value can be anything api_key or bearer token) is referred by agent-controller for agent registration with wxo
    AGENT_AUTH_TOKEN: AGENT_AUTH_TOKEN
    LANGFUSE_SECRET_KEY: LANGFUSE_SECRET_KEY
    LANGFUSE_PUBLIC_KEY: LANGFUSE_PUBLIC_KEY

imagePullSecrets:
  - name: wxa4z-image-pull-secret

resources:
  limits:
    cpu: "2"
    memory: "2Gi"
  requests:
    cpu: "200m"
    memory: "1Gi"

pvc:
  storageClass: "ocs-storagecluster-cephfs"
  accessModes:
  - ReadWriteOnce
  enabled: true
  size: 8Gi

networkPolicy:
  name: wxa4z-workload-scheduler-agent-network-policy
  egress:
  - {}
  ingress:
  - {}


bootstrapJob:
  enabled: true
  completions: 1
  parallelism: 1
  backoffLimit: 2
  activeDeadlineSeconds: 1800
  image:
    repository: icr.io/wxa4z-agentic-development/agent-bootstrapper
    tag: v1-pre-release
    pullPolicy: Always
    overwrite: "true"
  imagePullSecrets:
    - name: wxa4z-image-pull-secret
  secret:
    dev_mode: false  # Set this to true if you are installing subchart independently. When using wxa4z-agentic-suite, this should be false.
    name: workload-scheduler-agent-bootstrap-job-secret
    data:
      ORCHESTRATE_ENV_TYPE: cpd
      WATSONX_API_KEY: WATSONX_API_KEY
      ORCHESTRATE_ENV_URL: ORCHESTRATE_ENV_URL
      CPD_USERNAME: CPD_USERNAME
  env:
    ORCHESTRATE_ENV_NAME: "wxo-live-instance"
    CONFIG_PATH: "/workload-scheduler-agent-bootstrap-config/workload_scheduler_agent_bootstrap_config.yaml"
    HOME: /opt/app-root/src
  resources:
    limits:
      cpu: "1"
      memory: "1Gi"
    requests:
      cpu: "250m"
  serviceAccount:
    name: workload-schedulers-agent-bootstrap-job-sa